spring:
  batch:
    job:
      enabled: true
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    dynamic:
      druid:
        initial-size: 5
        max-active: 20
        min-idle: 5
        max-wait: 60000
        validation-query: select 1
        validation-query-timeout: 2000
        test-on-borrow: false
        test-on-return: false
        test-while-idle: true
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        stat:
          log-slow-sql: true
          merge-sql: true
          slow-sql-millis: 10000
      primary: master
      datasource:
        master:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/springbatch?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
          username: root
          password: 123456
        slave1:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/springbatch1?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
          username: root
          password: 123456
        slave2:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/springbatch2?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
          username: root
          password: 123456

  shardingsphere:
#    mode:
#      type: Cluster
#      repository:
#        type: ZooKeeper
#        props:
#          namespace: demo_spring_boot_ds_sharding
#          server-lists: localhost:2181
#      overwrite: true
    mode:
      type: Memory
    props:
      sql-show: true
    datasource:
      names: ds,ds-slave1,ds1,ds2
      ds:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/user_db?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
        username: root
        password: 123456
      ds-slave1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/user_db_s1?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
        username: root
        password: 123456
      ds1:
        #type: com.zaxxer.hikari.HikariDataSource
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/springbatch1?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
        username: root
        password: 123456
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/springbatch2?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
        username: root
        password: 123456
    rules:
      sharding:
        tables:
          t_order:
            actual-data-nodes: ds$->{1..2}.t_order_$->{1..2}
            key-generate-strategy:
              column: order_id
              key-generator-name: leaf-segment
              #key-generator-name: leaf-snowflake
            database-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: database-t-order-inline
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: table-t-order-inline
          t_user:
            actual-data-nodes: readwrite_ds.t_user
            table-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: table-t-user-inline

        sharding-algorithms:
          database-t-order-inline:
            type: INLINE
            props:
              algorithm-expression: ds$->{user_id % 2 + 1}
          table-t-order-inline:
            type: INLINE
            props:
              algorithm-expression: t_order_$->{order_id % 2 + 1}
              allow-range-query-with-inline-sharding: true
          table-t-user-inline:
            type: INLINE
            props:
              algorithm-expression: t_user
              allow-range-query-with-inline-sharding: true
        key-generators:
          leaf-segment:
            type: leafSegment
            props:
              biz-tag: leaf-segment-test
          leaf-snowflake:
            type: leafSnowflake

        broadcast-tables: t_dict

      readwrite-splitting:
        data-sources:
          readwrite_ds:
            type: Static
            props:
              write-data-source-name: ds
              read-data-source-names: ds-slave1
            load-balancer-name: round_robin
        load-balancers:
          round_robin:
            type: ROUND_ROBIN

logging:
  level:
    com.baomidou: debug
    org.apache.shardingsphere: debug